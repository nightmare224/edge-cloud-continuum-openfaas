---
- name: Cleanup localhost
  hosts: localhost
  tasks:
    - name: Cleanup kubeconfig directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/kubeconfig"
        state: absent
    - name: Recreate kubeconfig directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/kubeconfig"
        state: directory
    - name: Cleanup p2p directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p"
        state: absent
    - name: Recreate p2p/pubKey-peer directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p/pubKey-peer"
        state: directory
    - name: Recreate p2p/privKey directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p/privKey"
        state: directory


- name: Fetch the kubeconfig file from all Kubernetes server
  hosts: master:&openfaas #on_premise:&master
  tasks:
    - name: Fetch from the cluster
      fetch:
        src: "{{ kubeconfig_path }}"
        dest: "{{ playbook_dir }}/roles/openfaas/files/openfaas/kubeconfig/{{ inventory_hostname }}-kubeconfig"
        flat: true
      become: yes
      # when: 
      #   "('on_premise' in group_names) and ('master' in group_names)"

# need login before hand
# - name: Fetch the kubeconfig file from all Kubernetes server
#   hosts: aks
#   vars:
#     ansible_python_interpreter: /opt/homebrew/Caskroom/miniforge/base/envs/faas-workload/bin/python3
#   tasks:
#     - block:
#       - name: From AKS
#         azure_rm_aks_info:
#           # ad_user: "{{ aks_ad_user }}"
#           # password: "{{ aks_password }}"
#           subscription_id: "{{ aks_subscription_id }}"
#           name: "{{ aks_name }}"
#           resource_group: "{{ aks_resource_group }}"
#           show_kubeconfig: admin
#         register: resp_kubeconfig
#       - name: Save kubeconfig
#         copy:
#           content: "{{ resp_kubeconfig['aks'][0]['kube_config'] }}"
#           # dest: "{{ playbook_dir }}/roles/openfaas/files/openfaas/kubeconfig/{{ inventory_hostname }}-kubeconfig"
#           dest: "{{ playbook_dir }}/roles/openfaas/files/{{ inventory_hostname }}-kubeconfig"
#       # when: "'aks' in group_names"
    


- name: Copy required configs to the Helm chart
  hosts: master #on_premise:&master 
  tasks:
    - name: Copy p2p public key
      copy:
        src: "{{ playbook_dir }}/roles/p2p_common/files/p2p/pubKey/{{ ansible_host }}"
        dest: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p/pubKey-peer/{{ ansible_host }}"
      delegate_to: localhost
    - name: Copy p2p private key
      copy:
        src: "{{ playbook_dir }}/roles/p2p_common/files/p2p/privKey/{{ ansible_host }}"
        dest: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p/privKey/{{ ansible_host }}"
      delegate_to: localhost

- name: Install OpenFaaS on Kubernetes
  hosts: master:&openfaas
    # - on_premise:&master
    # - aks
  gather_facts: no
  roles:
    - openfaas
  vars:
    faasclient_password: "{{ lookup('file', '{{ playbook_dir }}/roles/faas_common/files/basic-auth-password/{{ ansible_host }}') }}"
  tags: openfaas_helm_update