---
- name: Cleanup localhost
  hosts: localhost
  tasks:
    - name: Cleanup kubeconfig directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/kubeconfig"
        state: absent
    - name: Recreate kubeconfig directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/kubeconfig"
        state: directory
    - name: Cleanup p2p directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p"
        state: absent
    - name: Recreate p2p/pubKey-peer directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p/pubKey-peer"
        state: directory
    - name: Recreate p2p/privKey directory
      file:
        path: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p/privKey"
        state: directory


- name: Fetch the kubeconfig file from all Kubernetes server
  hosts: master:&openfaas 
  tasks:
    - name: Fetch from the cluster
      fetch:
        src: "{{ kubeconfig_path }}"
        dest: "{{ playbook_dir }}/roles/openfaas/files/openfaas/kubeconfig/{{ group_names[1] }}-kubeconfig"
        flat: true
      become: yes

- name: Reconfig the hostname of kubeconfig file
  hosts: localhost
  tasks:
    - name: Change ip o hostname
      shell: sed -i 's/0.0.0.0/kubernetes/' {{ playbook_dir }}/roles/openfaas/files/openfaas/kubeconfig/cloud_cluster1-kubeconfig
      when: "architecture == 'centralized'"
    - name: Add ip to hostname in /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ ip }} kubernetes"
        regexp: '.* kubernetes'
      vars:
        ip: "{{ lookup('file', '{{ playbook_dir }}/roles/k3s/files/hostname/cloud_cluster1') }}"
      become: yes
      when: "architecture == 'centralized'"

- name: Copy required configs to the Helm chart
  hosts: master #on_premise:&master 
  tasks:
    - name: Copy p2p public key
      copy:
        src: "{{ playbook_dir }}/roles/p2p_common/files/p2p/pubKey/{{ ansible_host }}"
        dest: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p/pubKey-peer/{{ ansible_host }}"
      delegate_to: localhost
    - name: Copy p2p private key
      copy:
        src: "{{ playbook_dir }}/roles/p2p_common/files/p2p/privKey/{{ ansible_host }}"
        dest: "{{ playbook_dir }}/roles/openfaas/files/openfaas/p2p/privKey/{{ ansible_host }}"
      delegate_to: localhost

- name: Install OpenFaaS on Kubernetes
  hosts: master:&openfaas
    # - on_premise:&master
    # - aks
  gather_facts: no
  roles:
    - openfaas
  vars:
    faasclient_password: "{{ lookup('file', '{{ playbook_dir }}/roles/faas_common/files/basic-auth-password/{{ ansible_host }}') }}"
  tags: openfaas_helm_update