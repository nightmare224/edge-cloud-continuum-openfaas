---
# - name: Download OpenFaaS Helm Chart
#   unarchive:
#     src: openfaas-{{ openfaas_helm_version }}.tgz
#     dest: /home/{{ ansible_user }}/app
#     creates: /home/{{ ansible_user }}/app/openfaas

# - name: Upload other cluster's kubeconfig
#   copy:
#     src: "{{ item }}"
#     dest: /home/{{ ansible_user }}/app/openfaas/kubeconfig/
#   with_fileglob:
#     - "*-kubeconfig"
#   when: "inventory_hostname not in item"

# - name: Deploy OpenFaaS Helm Chart
#   kubernetes.core.helm:
#     name: openfaas
#     chart_ref: /home/{{ ansible_user }}/app/openfaas
#     values:
#       gateway:
#         image: "{{ openfaas_gateway_image }}"
#       faasnetes:
#         image: "{{ openfaas_netes_image }}"
#       offload:
#         enabled: "{{ offload_enabled }}"
#     release_namespace: openfaas
#     create_namespace: true
#     wait: True
#     timeout: 600s
#     kubeconfig: "{{ kubeconfig_path }}"

# - name: Upload other cluster's kubeconfig
#   copy:
#     src: "{{ item }}"
#     dest: /home/{{ ansible_user }}/app/openfaas/kubeconfig/
#   with_fileglob:
#     - "*-kubeconfig"
#   when: "inventory_hostname not in item"

- name: Copy cluster's kubeconfig file to Helm Chart
  copy:
    src: "{{ item }}"
    dest: "{{ role_path }}/files/openfaas/kubeconfig/"
  with_fileglob:
    - "*-kubeconfig"
  delegate_to: localhost

- name: Deploy OpenFaaS Helm Chart
  kubernetes.core.helm:
    name: openfaas
    chart_ref: "{{ role_path }}/files/openfaas"
    values:
      gateway:
        image: "{{ openfaas_gateway_image }}"
      faasnetes:
        image: "{{ openfaas_netes_image }}"
      offload:
        enabled: "{{ offload_enabled }}"
    release_namespace: openfaas
    create_namespace: true
    wait: True
    timeout: 600s
    kubeconfig: "{{ inventory_hostname }}-kubeconfig"
  delegate_to: localhost